name: Deploy app service for react app
on: workflow_dispatch

env:
  NODE_VERSION: '16.x'
  RESOURCE_GROUP: mtc-terraform-webapp-rg

jobs:
  # deployResource:  
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@master
  #     - name: Login to Azure
  #       uses: Azure/login@v1.4.3
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
  #     - name: List files
  #       run: ls -la
  #     - name: Instal Terraform
  #       uses: hashicorp/setup-terraform@v1
  #     - name: terraform init
  #       run: terraform init
  #     - name: terraform plan
  #       env:
  #         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #       run: terraform plan -no-color
  #     - name: terraform apply
  #       env:
  #         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #         ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #       run: terraform apply -auto-approve
  buildApp:
    runs-on: ubuntu-latest
    # needs: deployResource
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
      - name: Login to Azure
        uses: Azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: react-app/package-lock.json
      - name: Install dependencies
        working-directory: react-app
        run: | 
          npm install 
          npm run build --if-present
      # zip build directory
      - name: Zip the build direcotory
        working-directory: react-app/build
        run: |
          ls -la
          zip -r release.zip . 
      - name: Deploy to Azure
        working-directory: react-app/build
        run: |
          az webapp deployment source config-zip --resource-group ${{ env.RESOURCE_GROUP }} --name wapp-mtc-webapp-terraform-nodejs --src release.zip
      # - name: Upload artifact for deployment job
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: node-app
      #     path: react-app/build/release.zip
  # deployApp:
  #   runs-on: ubuntu-latest
  #   needs: buildApp
  #   environment: 'Production'

  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: node-app
  #     - name: 'Deploy to Azure Web App'
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ''
  #         slot-name: 'Production'
  #         publish-profile: $
  #         package: .
      
      # - name: Deploy to webapp
      #   working-directory: react-app/build
      #   run: |
      #     ls -la
      #     az webapp deployment source config-zip --resource-group ${{ env.RESOURCE_GROUP }} --name wapp-mtc-webapp-terraform-nodejs --src ./my-app.zip



      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: ${{ env.NODE_VERSION }}
      #     cache: 'npm'
      #     cache-dependency-path: nodejs-docs-hello-world/package-lock.json
      # - name: npm install, build
      #   working-directory: ./nodejs-docs-hello-world
      #   run: |
      #     npm install 
      #     zip -r my-app.zip . 
      # - name: Deploy to webapp
      #   working-directory: ./nodejs-docs-hello-world
      #   # wapp-mtc-webapp-nodejs
      #   run: |
      #     ls -la
      #     az webapp deployment source config-zip --resource-group ${{ env.RESOURCE_GROUP }} --name wapp-mtc-webapp-terraform-nodejs --src ./my-app.zip
    

